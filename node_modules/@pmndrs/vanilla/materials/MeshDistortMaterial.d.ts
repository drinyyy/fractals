import { IUniform, MeshPhysicalMaterial, MeshPhysicalMaterialParameters } from 'three';
export interface MeshDistortMaterialParameters {
    time?: number;
    distort?: number;
    radius?: number;
}
export declare class MeshDistortMaterial extends MeshPhysicalMaterial {
    _time: IUniform<number>;
    _distort: IUniform<number>;
    _radius: IUniform<number>;
    constructor({ time, distort, radius, ...parameters }?: MeshDistortMaterialParameters & MeshPhysicalMaterialParameters);
    onBeforeCompile(shader: {
        vertexShader: string;
        uniforms: {
            [uniform: string]: IUniform;
        };
    }): void;
    get time(): number;
    set time(v: number);
    get distort(): number;
    set distort(v: number);
    get radius(): number;
    set radius(v: number);
}
